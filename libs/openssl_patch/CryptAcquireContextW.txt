*** openssl-1.1.1c.org/crypto/rand/rand_win.c	2019-05-28 22:12:20.000000000 +0900
--- openssl/crypto/rand/rand_win.c	2019-07-11 00:27:30.582096400 +0900
***************
*** 36,42 ****
   * http://developer.intel.com/design/security/rng/redist_license.htm
   */
  #  define PROV_INTEL_SEC 22
! #  define INTEL_DEF_PROV L"Intel Hardware Cryptographic Service Provider"
  # endif
  
  size_t rand_pool_acquire_entropy(RAND_POOL *pool)
--- 36,42 ----
   * http://developer.intel.com/design/security/rng/redist_license.htm
   */
  #  define PROV_INTEL_SEC 22
! #  define INTEL_DEF_PROV ("Intel Hardware Cryptographic Service Provider")
  # endif
  
  size_t rand_pool_acquire_entropy(RAND_POOL *pool)
*************** size_t rand_pool_acquire_entropy(RAND_PO
*** 81,87 ****
      if (buffer != NULL) {
          size_t bytes = 0;
          /* poll the CryptoAPI PRNG */
!         if (CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL,
                                   CRYPT_VERIFYCONTEXT | CRYPT_SILENT) != 0) {
              if (CryptGenRandom(hProvider, bytes_needed, buffer) != 0)
                  bytes = bytes_needed;
--- 81,87 ----
      if (buffer != NULL) {
          size_t bytes = 0;
          /* poll the CryptoAPI PRNG */
!         if (CryptAcquireContextA(&hProvider, NULL, NULL, PROV_RSA_FULL,
                                   CRYPT_VERIFYCONTEXT | CRYPT_SILENT) != 0) {
              if (CryptGenRandom(hProvider, bytes_needed, buffer) != 0)
                  bytes = bytes_needed;
*************** size_t rand_pool_acquire_entropy(RAND_PO
*** 100,106 ****
      if (buffer != NULL) {
          size_t bytes = 0;
          /* poll the Pentium PRG with CryptoAPI */
!         if (CryptAcquireContextW(&hProvider, NULL,
                                   INTEL_DEF_PROV, PROV_INTEL_SEC,
                                   CRYPT_VERIFYCONTEXT | CRYPT_SILENT) != 0) {
              if (CryptGenRandom(hProvider, bytes_needed, buffer) != 0)
--- 100,106 ----
      if (buffer != NULL) {
          size_t bytes = 0;
          /* poll the Pentium PRG with CryptoAPI */
!         if (CryptAcquireContextA(&hProvider, NULL,
                                   INTEL_DEF_PROV, PROV_INTEL_SEC,
                                   CRYPT_VERIFYCONTEXT | CRYPT_SILENT) != 0) {
              if (CryptGenRandom(hProvider, bytes_needed, buffer) != 0)
